version: 2.1
jobs:
  build_and_test:
    docker:
      - image: gregbreen/uncannier-thunderboard:gecko-sdk-suite-v2.5
    steps:
      - checkout
      - run:
          name: Inject version information
          command: |
            # Set the version to the tag if a tag triggered this build. For untagged builds default the version to 0.0.0
            if [ -z "$CIRCLE_TAG" ]; then CI_VERSION=0.0.0; else CI_VERSION=$CIRCLE_TAG; fi
            CI_COMMIT=$(echo $CIRCLE_SHA1 | cut -c -7)
            FILENAME="./utr-application/uncannier/ci.h"
            echo "#define CI_VERSION \"$CI_VERSION\"" > $FILENAME
            echo "#define CI_BUILD $CIRCLE_BUILD_NUM" >> $FILENAME
            echo "#define CI_COMMIT 0x$CI_COMMIT" >> $FILENAME
            cat $FILENAME
      - run:
          name: Build the Uncannier Thunderboard React bootloader
          command: /opt/SimplicityStudio_v4/studio -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild --launcher.suppressErrors -import utr-bootloader -cleanBuild utr-bootloader/Release
      - run:
          name: Build the Uncannier Thunderboard React application - Debug configuration
          command: /opt/SimplicityStudio_v4/studio -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild --launcher.suppressErrors -import utr-application -cleanBuild utr-application/Debug
      - run:
          name: Build the Uncannier Thunderboard React application - Release configuration
          command: /opt/SimplicityStudio_v4/studio -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild --launcher.suppressErrors -import utr-application -cleanBuild utr-application/Release
      - run:
          name: Build the Uncannier Thunderboard React application - Test configuration
          command: /opt/SimplicityStudio_v4/studio -nosplash -application org.eclipse.cdt.managedbuilder.core.headlessbuild --launcher.suppressErrors -import utr-application -cleanBuild utr-application/Test
      - run:
          name: Generate xUnit-compatible test output
          command: mkdir -p JUnit; utr-application/Test/utr-application -ojunit; mv cpputest*.xml JUnit
      - run:
          name: Package the build binaries
          command: |
            # Create a composite version to use in filenames. 0.0.0-buildnum for untagged builds
            if [ -z "$CIRCLE_TAG" ]; then VERSION=0.0.0-$CIRCLE_BUILD_NUM; else VERSION=$CIRCLE_TAG-$CIRCLE_BUILD_NUM; fi
            cd utr-application/Release
            mv utr-image.hex utr-image-$VERSION.hex
            mv utr-application.gbl utr-application-$VERSION.gbl
            mv utr-apploader.gbl utr-apploader-$VERSION.gbl
            tar -cvzf uncannier-thunderboard-react.tar.gz utr-image-$VERSION.hex utr-application-$VERSION.gbl utr-apploader-$VERSION.gbl
      - store_test_results:
          path: ./JUnit
      - store_artifacts:
          path: ./utr-application/Release/uncannier-thunderboard-react.tar.gz
          destination: uncannier-thunderboard-react.tar.gz
      - store_artifacts:
          path: ./utr-application/Test/Coverage
          destination: Coverage

workflows:
  version: 2
  # Run the build when any new commits or tags are pushed
  commit-or-tag:
    jobs:
      - build_and_test:
          filters:
            tags:
              only: /.*/

